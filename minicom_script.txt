# Minicom script which configures xen dom0less setup
# It can be run with the next command:
# minicom -S minicom_script.txt -C m.out

send "\r"
expect =>

send run mmc0_dtb_load
expect =>

send ext2load mmc 0:1 0x58000000 /boot/uInitramfs; ext2load mmc 0:1 0x68000000 /boot/Image;
expect =>

send fdt mknode /chosen domU1
expect =>
send fdt set /chosen/domU1 compatible "xen,domain"
expect =>
send fdt set /chosen/domU1 memory <0x0 0x40000>
expect =>
send fdt set /chosen/domU1 cpus <1>
expect =>

send fdt set /chosen/domU1 vpl011
expect =>

send fdt mknode /chosen/domU1 module@68000000
expect =>
send fdt set /chosen/domU1/module@68000000 compatible "multiboot,kernel" "multiboot,module"
expect =>
send fdt set /chosen/domU1/module@68000000 reg <0x0 0x68000000 0x0 0x02000000>
expect =>

#send "fdt set /chosen/domU1/module@68000000 bootargs \"console=dtuart dtuart=serial0\""
#send "fdt set /chosen/domU1/module@68000000 bootargs \"console=hvc0 ignore_loglevel\""
send "fdt set /chosen/domU1/module@68000000 bootargs \"console=serial0 ignore_loglevel\""
expect =>

send fdt mknode /chosen/domU1 module@58000000
expect =>
send fdt set /chosen/domU1/module@58000000 compatible "multiboot,ramdisk" "multiboot,module"
expect =>
send fdt set /chosen/domU1/module@58000000 reg <0x0 0x58000000 0x0 0x016d9bb2>
expect =>

send fdt print /chosen
expect =>

send ping 192.168.1.1
expect host 192.168.1.1 is alive
send run bootcmd_xen_tftp
expect =>

send run mmc0_kernel_load; run mmc0_xenpolicy_load; run mmc0_initramfs_load; bootm 0x48080000 0x76000000 0x48000000
expect =>

exit
